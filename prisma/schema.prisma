// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  MANAGER
  PLAYER
}

model User {
  id            Int      @id @default(autoincrement())
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  dateOfBirth   String?  // New field for date of birth
  phoneNumber   String?    // New field for phone number
  roles         Role[]     // New field for roles, an array of the Role enum
  teamsManaged  Team[]   @relation("ManagerTeams") // Relation to teams managed
  teamsPlayer   Team[]   @relation("PlayerTeams")  // Relation to teams as player
}



model Team {
  id                 Int          @id @default(autoincrement())
  name               String
  managers           User[]       @relation("ManagerTeams")  // Managers with MANAGER role
  Roster             User[]       @relation("PlayerTeams")   // Registered players
}

model Account {
  id                Int      @id @default(autoincrement()) // Auto-increment ID
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
}

